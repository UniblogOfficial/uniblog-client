import React from 'react';

// Almost all what you need for beautiful life
// Don't push it all, be wise and keep it low
// UX is more important than your wet phantasies
const ids = [
  'analytics',
  'angle-right',
  'arrow-down-1-9',
  'arrow-down-9-1',
  'arrow-down-a-z',
  'arrow-down-arrow-up',
  'arrow-down-z-a',
  'arrow-right',
  'arrow-right-arrow-left',
  'arrow-right-from-bracket',
  'arrow-right-from-line',
  'arrow-right-long',
  'arrow-right-to-bracket',
  'arrow-right-to-line',
  'arrow-rotate-forward',
  'arrow-trend-up',
  'arrow-turn-up',
  'arrows-rotate',
  'arrows-up-down-left-right',
  'asterisk',
  'at',
  'badge',
  'badge-check',
  'badge-percent',
  'bag-shopping',
  'bags-shopping',
  'ban',
  'bars',
  'basket-shopping',
  'basket-shopping-simple',
  'bell',
  'bitcoin-sign',
  'bookmark',
  'bookmark-slash',
  'calculator',
  'caret-right',
  'cart',
  'certificate',
  'circle',
  'circle-solid',
  'chat',
  'check',
  'check-double',
  'chevron-right',
  'chevrons-right',
  'credit-card',
  'database',
  'do-not-enter',
  'dollar-sign',
  'download',
  'earth-africa',
  'earth-americas',
  'earth-asia',
  'earth-europa',
  'ellipsis',
  'envelope',
  'envelope-duo',
  'envelope-dot',
  'envelope-open-text',
  'euro-sign',
  'exclamation',
  'eye',
  'eye-slash',
  'filter',
  'filter-circle-xmark',
  'filter-list',
  'filter-slash',
  'filters',
  'floppy-disk',
  'gear',
  'globe',
  'grid',
  'grid-2',
  'grid-mosaic',
  'heart',
  'heartbreak',
  'heart-solid',
  'home',
  'key',
  'language',
  'language-duo',
  'lightning',
  'list',
  'magnifying-glass',
  'mailbox',
  'percent',
  'power-off',
  'question',
  'rocket-launch',
  'rotate',
  'rotate-forward',
  'ruler-triangle',
  'server',
  'sliders',
  'square-full',
  'star',
  'star-half-stroke',
  'tag',
  'tags',
  'trash-can',
  'trash-can-arrow-up',
  'trash-can-clock',
  'trash-can-list',
  'trash-can-slash',
  'trash-can-undo',
  'truck',
  'user',
  'user-check',
  'user-group',
  'window',
  'xmark',
] as const;
type ElementType<T extends ReadonlyArray<unknown>> = T extends ReadonlyArray<
  // eslint-disable-next-line @typescript-eslint/no-shadow
  infer ElementType
>
  ? ElementType
  : never;

export type TIconName = ElementType<typeof ids>; // this is correctly inferred as literal "A" | "B"

export const IconSpritesMap = () => (
  <svg id="main-sprite" xmlns="http://www.w3.org/2000/svg" style={{ display: 'none' }}>
    <defs />
    {/*          */}
  </svg>
);
